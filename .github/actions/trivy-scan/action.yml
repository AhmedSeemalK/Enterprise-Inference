name: 'Trivy scan'

inputs:
  PR-number:
    description: 'Pull request number'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: refs/pull/${{ inputs.PR-number }}/head

    - name: Run Trivy vulnerability scanner
      uses: intel-innersource/frameworks.actions.trivy@main
      with:
        TRIVY_REPORT_FORMAT: 'json'
        TRIVY_SCAN_TYPE: 'fs'
        TRIVY_OUTPUT_FILE: 'trivy_fs_report_${{ github.sha }}.json'
        TRIVY_SCAN_PATH: '.'
        TRIVY_EXIT_CODE: '1'
        TRIVY_VULN_TYPE: 'os,library'
        TRIVY_SEVERITY: 'CRITICAL,HIGH'
        TRIVY_CUSTOM_PARAMS: "--debug --list-all-pkgs"

    - name: Upload artifacts - csv
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: "trivy_fs_report_${{ github.sha }}"
        path: "trivy_fs_report_${{ github.sha }}.json"

    - name: Generate Trivy Vulnerability Report
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        output: trivy-report.json
        format: json
        exit-code: 0

    - name: Upload Vulnerability Scan Results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json
        retention-days: 30

    - name: Check High/Criticial Vulnerabilities
      id: checkVulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        format: table
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        exit-code: 1
        skip-setup-trivy: true
      continue-on-error: true
    
    - name: Add annotation if High/Criticial Vulnerabilities are found
      if: ${{ steps.checkVulnerabilities.conclusion == 'success' && steps.checkVulnerabilities.outcome == 'failure' }}
      shell: bash
      run: echo "::error::High/Critical vulnerabilities found. Please check the trivy report for more details."
